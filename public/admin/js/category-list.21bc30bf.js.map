{"version":3,"file":"js/category-list.21bc30bf.js","mappings":"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","sources":["webpack://vue-cms-admin/./src/views/Category/List.vue","webpack://vue-cms-admin/src/views/Category/List.vue","webpack://vue-cms-admin/./src/views/Category/List.vue?a657","webpack://vue-cms-admin/./src/views/Category/List.vue?906b"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-card',{},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"分类列表\")])]),_c('el-tree',{ref:\"tree\",attrs:{\"node-key\":\"cate_id\",\"load\":_vm.loadNode,\"default-expanded-keys\":[0],\"highlight-current\":\"\",\"lazy\":\"\",\"props\":_vm.defaultProps},scopedSlots:_vm._u([{key:\"default\",fn:function({ node, data }){return _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[_vm._v(_vm._s(node.label))]),_c('span',[_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.openEditDialog(node, data)}}},[_vm._v(\" 编辑 \")]),_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-circle-plus-outline\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.openInsertDialog(node, data)}}},[_vm._v(\" 添加 \")]),_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.openRemoveDialog(node, data)}}},[_vm._v(\" 删除 \")])],1)])}}])})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.insert_dialog_visible},on:{\"update:visible\":function($event){_vm.insert_dialog_visible=$event}}},[_c('el-form',{ref:\"insertForm\",attrs:{\"model\":_vm.insert_form,\"rules\":_vm.rules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\",\"prop\":\"cate_name\"}},[_c('el-input',{model:{value:(_vm.insert_form.cate_name),callback:function ($$v) {_vm.$set(_vm.insert_form, \"cate_name\", $$v)},expression:\"insert_form.cate_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.insert_dialog_visible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleInsert('insertForm')}}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"编辑分类\",\"visible\":_vm.edit_dialog_visible},on:{\"update:visible\":function($event){_vm.edit_dialog_visible=$event}}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.edit_form,\"rules\":_vm.rules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\",\"prop\":\"cate_name\"}},[_c('el-input',{model:{value:(_vm.edit_form.cate_name),callback:function ($$v) {_vm.$set(_vm.edit_form, \"cate_name\", $$v)},expression:\"edit_form.cate_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.edit_dialog_visible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleEdit('editForm')}}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-card class=\"\">\r\n      <div slot=\"header\">\r\n        <span>分类列表</span>\r\n      </div>\r\n      <!-- 树形组件 -->\r\n      <el-tree ref=\"tree\" node-key=\"cate_id\" :load=\"loadNode\" :default-expanded-keys=\"[0]\" highlight-current lazy\r\n        :props=\"defaultProps\">\r\n        <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n          <span>{{ node.label }}</span>\r\n          <span>\r\n            <el-button @click.stop=\"openEditDialog(node, data)\" type=\"text\" icon=\"el-icon-edit\">\r\n              编辑\r\n            </el-button>\r\n            <el-button @click.stop=\"openInsertDialog(node, data)\" type=\"text\" icon=\"el-icon-circle-plus-outline\">\r\n              添加\r\n            </el-button>\r\n            <el-button @click.stop=\"openRemoveDialog(node, data)\" type=\"text\" icon=\"el-icon-delete\">\r\n              删除\r\n            </el-button>\r\n          </span>\r\n        </span>\r\n      </el-tree>\r\n    </el-card>\r\n    <!-- 添加模态框 -->\r\n    <el-dialog title=\"添加分类\" :visible.sync=\"insert_dialog_visible\">\r\n      <el-form :model=\"insert_form\" :rules=\"rules\" ref=\"insertForm\" label-width=\"80px\">\r\n        <el-form-item label=\"分类名称\" prop=\"cate_name\">\r\n          <el-input v-model=\"insert_form.cate_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"insert_dialog_visible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleInsert('insertForm')\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 编辑模态框 -->\r\n    <el-dialog title=\"编辑分类\" :visible.sync=\"edit_dialog_visible\">\r\n      <el-form :model=\"edit_form\" :rules=\"rules\" ref=\"editForm\" label-width=\"80px\">\r\n        <el-form-item label=\"分类名称\" prop=\"cate_name\">\r\n          <el-input v-model=\"edit_form.cate_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"edit_dialog_visible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleEdit('editForm')\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Category } from \"@/api/\";\r\n\r\nexport default {\r\n  name: \"List\",\r\n  data() {\r\n    return {\r\n      defaultProps: { label: \"cate_name\" },\r\n      insert_form: {\r\n        cate_name: \"\",\r\n        parent_id: \"\",\r\n      },\r\n      edit_form: {\r\n        cate_id: \"\",\r\n        cate_name: \"\",\r\n        parent_id: \"\",\r\n      },\r\n      rules: {\r\n        cate_name: [{ required: true, message: \"请输入分类名称\", trigger: \"blur\" }],\r\n      },\r\n      node: {}, //节点对象\r\n      insert_dialog_visible: false,\r\n      edit_dialog_visible: false,\r\n    };\r\n  },\r\n  created() {\r\n    document.title = \"分类列表\";\r\n  },\r\n  methods: {\r\n    async loadNode(node, resolve) {\r\n      // 根节点\r\n      if (node.level === 0) {\r\n        return resolve([{ cate_name: \"全部分类\", cate_id: 0 }]);\r\n      }\r\n      // 子节点\r\n      let { cate_id } = node.data;\r\n      let { status, data } = await Category.subcate({ cate_id });\r\n      if (status) {\r\n        resolve(data);\r\n      }\r\n    },\r\n    openEditDialog(node, data) {\r\n      // 转存节点对象\r\n      this.node = node;\r\n      this.edit_form = { ...data };\r\n      this.edit_dialog_visible = true;\r\n    },\r\n    handleEdit(formName) {\r\n      this.$refs[formName].validate(async (valid) => {\r\n        if (valid) {\r\n          let { status, msg } = await Category.edit({ ...this.edit_form });\r\n          if (status) {\r\n            this.$message.success(msg);\r\n            this.edit_dialog_visible = false;\r\n            // 更新节点\r\n            this.node.data = this.edit_form;\r\n          } else {\r\n            this.$message.error(msg);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    openInsertDialog(node, data) {\r\n      // 转存父级分类 cate_id\r\n      this.insert_form.parent_id = data.cate_id;\r\n      // 转存父类节点parentNode\r\n      this.node = node;\r\n      this.insert_dialog_visible = true;\r\n    },\r\n    handleInsert(formName) {\r\n      this.$refs[formName].validate(async (valid) => {\r\n        if (valid) {\r\n          let { status, msg, data } = await Category.insert({ ...this.insert_form });\r\n          if (status) {\r\n            // 关闭弹窗\r\n            this.insert_dialog_visible = false;\r\n            // 添加节点\r\n            this.$refs.tree.append({ ...this.insert_form, ...data }, this.node);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    openRemoveDialog(node, data) {\r\n      this.$confirm(\"确定要删除此分类吗？\", { type: \"warning\" })\r\n        .then(async () => {\r\n          let { status, msg } = await Category.remove({ cate_id: data.cate_id });\r\n          if (status) {\r\n            this.$refs.tree.remove(data);\r\n            this.$message.success(msg);\r\n          } else {\r\n            this.$message.error(msg);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message.info(\"取消成功！\");\r\n        });\r\n    },\r\n    //设置默认展开节点\r\n    setDefaultExpandedKeys() {\r\n      // 获取树形组件实例\r\n      let allNodes = this.$refs.tree.store._getAllNodes();\r\n      let defaultExpandedNodes = [];\r\n      allNodes.forEach(node => {\r\n        node.expanded && defaultExpandedNodes.push(node.data.id);\r\n      });\r\n      this.defaultExpandedKeys = defaultExpandedNodes;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 13px;\r\n  padding-right: 8px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=b097ab86&\"\nimport script from \"./List.vue?vue&type=script&lang=js&\"\nexport * from \"./List.vue?vue&type=script&lang=js&\"\nimport style0 from \"./List.vue?vue&type=style&index=0&id=b097ab86&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","slot","_v","ref","loadNode","defaultProps","scopedSlots","_u","key","fn","node","data","staticClass","_s","label","on","$event","stopPropagation","openEditDialog","openInsertDialog","openRemoveDialog","insert_dialog_visible","insert_form","rules","model","value","cate_name","callback","$$v","$set","expression","handleInsert","edit_dialog_visible","edit_form","handleEdit","staticRenderFns","name","parent_id","cate_id","required","message","trigger","created","document","title","methods","resolve","level","status","Category","formName","$refs","validate","valid","msg","$message","success","error","tree","append","$confirm","type","then","remove","catch","info","setDefaultExpandedKeys","allNodes","store","_getAllNodes","defaultExpandedNodes","forEach","expanded","push","id","defaultExpandedKeys","component"],"sourceRoot":""}